
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.reclaimprotocol.inapp_rn_sdk;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;

public abstract class NativeInappRnSdkSpec extends ReactContextBaseJavaModule implements TurboModule {
  public static final String NAME = "InappRnSdk";

  public NativeInappRnSdkSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  protected final void emitOnLogs(String value) {
    mEventEmitterCallback.invoke("onLogs", value);
  }

  protected final void emitOnSessionLogs(ReadableMap value) {
    mEventEmitterCallback.invoke("onSessionLogs", value);
  }

  protected final void emitOnSessionCreateRequest(ReadableMap value) {
    mEventEmitterCallback.invoke("onSessionCreateRequest", value);
  }

  protected final void emitOnSessionUpdateRequest(ReadableMap value) {
    mEventEmitterCallback.invoke("onSessionUpdateRequest", value);
  }

  protected final void emitOnProviderInformationRequest(ReadableMap value) {
    mEventEmitterCallback.invoke("onProviderInformationRequest", value);
  }

  protected final void emitOnReclaimAttestorAuthRequest(ReadableMap value) {
    mEventEmitterCallback.invoke("onReclaimAttestorAuthRequest", value);
  }

  protected final void emitOnSessionIdentityUpdate(ReadableMap value) {
    mEventEmitterCallback.invoke("onSessionIdentityUpdate", value);
  }

  @ReactMethod
  @DoNotStrip
  public abstract void startVerification(ReadableMap request, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void startVerificationFromUrl(String requestUrl, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void startVerificationFromJson(String templateJsonString, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void setOverrides(ReadableMap overrides, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void clearAllOverrides(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void setVerificationOptions(ReadableMap args, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void reply(String replyId, boolean reply);

  @ReactMethod
  @DoNotStrip
  public abstract void replyWithString(String replyId, String value);

  @ReactMethod
  @DoNotStrip
  public abstract void ping(Promise promise);
}
